;; ==========================================================
;; Class accessors
;; Bigloo (3.7b)
;; Inria -- Sophia Antipolis     Mon Nov 14 18:35:27 CET 2011 
;; (bigloo.new -classgen BackEnd/dotnet_class.scm)
;; ==========================================================

;; The directives
(directives

;; dotnet
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-dotnet::dotnet language1134::symbol srfi01135::symbol name1136::bstring extern-variables1137::obj extern-functions1138::obj extern-types1139::obj variables1140::obj functions1141::obj types1142::obj typed1143::bool heap-suffix1144::bstring heap-compatible1145::symbol callcc1146::bool qualified-types1147::bool effect+1148::bool remove-empty-let1149::bool foreign-closure1150::bool typed-eq1151::bool trace-support1152::bool foreign-clause-suppo1153::pair-nil debug-support1154::pair-nil pragma-support1155::bool tvector-descr-suppor1156::bool require-tailc1157::bool registers1158::pair-nil pregisters1159::pair-nil bound-check1160::bool type-check1161::bool typed-funcall1162::bool out1163::output-port qname1164::bstring)
    (inline dotnet?::bool ::obj)
    (dotnet-nil::dotnet)
    (inline dotnet-qname::bstring ::dotnet)
    (inline dotnet-qname-set! ::dotnet ::bstring)
    (inline dotnet-out::output-port ::dotnet)
    (inline dotnet-out-set! ::dotnet ::output-port)
    (inline dotnet-typed-funcall::bool ::dotnet)
    (inline dotnet-typed-funcall-set! ::dotnet ::bool)
    (inline dotnet-type-check::bool ::dotnet)
    (inline dotnet-type-check-set! ::dotnet ::bool)
    (inline dotnet-bound-check::bool ::dotnet)
    (inline dotnet-bound-check-set! ::dotnet ::bool)
    (inline dotnet-pregisters::pair-nil ::dotnet)
    (inline dotnet-pregisters-set! ::dotnet ::pair-nil)
    (inline dotnet-registers::pair-nil ::dotnet)
    (inline dotnet-registers-set! ::dotnet ::pair-nil)
    (inline dotnet-require-tailc::bool ::dotnet)
    (inline dotnet-require-tailc-set! ::dotnet ::bool)
    (inline dotnet-tvector-descr-support::bool ::dotnet)
    (inline dotnet-tvector-descr-support-set! ::dotnet ::bool)
    (inline dotnet-pragma-support::bool ::dotnet)
    (inline dotnet-pragma-support-set! ::dotnet ::bool)
    (inline dotnet-debug-support::pair-nil ::dotnet)
    (inline dotnet-debug-support-set! ::dotnet ::pair-nil)
    (inline dotnet-foreign-clause-support::pair-nil ::dotnet)
    (inline dotnet-foreign-clause-support-set! ::dotnet ::pair-nil)
    (inline dotnet-trace-support::bool ::dotnet)
    (inline dotnet-trace-support-set! ::dotnet ::bool)
    (inline dotnet-typed-eq::bool ::dotnet)
    (inline dotnet-typed-eq-set! ::dotnet ::bool)
    (inline dotnet-foreign-closure::bool ::dotnet)
    (inline dotnet-foreign-closure-set! ::dotnet ::bool)
    (inline dotnet-remove-empty-let::bool ::dotnet)
    (inline dotnet-remove-empty-let-set! ::dotnet ::bool)
    (inline dotnet-effect+::bool ::dotnet)
    (inline dotnet-effect+-set! ::dotnet ::bool)
    (inline dotnet-qualified-types::bool ::dotnet)
    (inline dotnet-qualified-types-set! ::dotnet ::bool)
    (inline dotnet-callcc::bool ::dotnet)
    (inline dotnet-callcc-set! ::dotnet ::bool)
    (inline dotnet-heap-compatible::symbol ::dotnet)
    (inline dotnet-heap-compatible-set! ::dotnet ::symbol)
    (inline dotnet-heap-suffix::bstring ::dotnet)
    (inline dotnet-heap-suffix-set! ::dotnet ::bstring)
    (inline dotnet-typed::bool ::dotnet)
    (inline dotnet-typed-set! ::dotnet ::bool)
    (inline dotnet-types::obj ::dotnet)
    (inline dotnet-types-set! ::dotnet ::obj)
    (inline dotnet-functions::obj ::dotnet)
    (inline dotnet-functions-set! ::dotnet ::obj)
    (inline dotnet-variables::obj ::dotnet)
    (inline dotnet-variables-set! ::dotnet ::obj)
    (inline dotnet-extern-types::obj ::dotnet)
    (inline dotnet-extern-types-set! ::dotnet ::obj)
    (inline dotnet-extern-functions::obj ::dotnet)
    (inline dotnet-extern-functions-set! ::dotnet ::obj)
    (inline dotnet-extern-variables::obj ::dotnet)
    (inline dotnet-extern-variables-set! ::dotnet ::obj)
    (inline dotnet-name::bstring ::dotnet)
    (inline dotnet-name-set! ::dotnet ::bstring)
    (inline dotnet-srfi0::symbol ::dotnet)
    (inline dotnet-srfi0-set! ::dotnet ::symbol)
    (inline dotnet-language::symbol ::dotnet)
    (inline dotnet-language-set! ::dotnet ::symbol)))))

;; The definitions
(cond-expand (bigloo-class-sans
;; dotnet
(define-inline (make-dotnet::dotnet language1134::symbol srfi01135::symbol name1136::bstring extern-variables1137::obj extern-functions1138::obj extern-types1139::obj variables1140::obj functions1141::obj types1142::obj typed1143::bool heap-suffix1144::bstring heap-compatible1145::symbol callcc1146::bool qualified-types1147::bool effect+1148::bool remove-empty-let1149::bool foreign-closure1150::bool typed-eq1151::bool trace-support1152::bool foreign-clause-suppo1153::pair-nil debug-support1154::pair-nil pragma-support1155::bool tvector-descr-suppor1156::bool require-tailc1157::bool registers1158::pair-nil pregisters1159::pair-nil bound-check1160::bool type-check1161::bool typed-funcall1162::bool out1163::output-port qname1164::bstring) (instantiate::dotnet (language language1134) (srfi0 srfi01135) (name name1136) (extern-variables extern-variables1137) (extern-functions extern-functions1138) (extern-types extern-types1139) (variables variables1140) (functions functions1141) (types types1142) (typed typed1143) (heap-suffix heap-suffix1144) (heap-compatible heap-compatible1145) (callcc callcc1146) (qualified-types qualified-types1147) (effect+ effect+1148) (remove-empty-let remove-empty-let1149) (foreign-closure foreign-closure1150) (typed-eq typed-eq1151) (trace-support trace-support1152) (foreign-clause-support foreign-clause-suppo1153) (debug-support debug-support1154) (pragma-support pragma-support1155) (tvector-descr-support tvector-descr-suppor1156) (require-tailc require-tailc1157) (registers registers1158) (pregisters pregisters1159) (bound-check bound-check1160) (type-check type-check1161) (typed-funcall typed-funcall1162) (out out1163) (qname qname1164)))
(define-inline (dotnet?::bool obj::obj) ((@ isa? __object) obj (@ dotnet backend_dotnet_class)))
(define (dotnet-nil::dotnet) (class-nil (@ dotnet backend_dotnet_class)))
(define-inline (dotnet-qname::bstring o::dotnet) (with-access::dotnet o (qname) qname))
(define-inline (dotnet-qname-set! o::dotnet v::bstring) (with-access::dotnet o (qname) (set! qname v)))
(define-inline (dotnet-out::output-port o::dotnet) (with-access::dotnet o (out) out))
(define-inline (dotnet-out-set! o::dotnet v::output-port) (with-access::dotnet o (out) (set! out v)))
(define-inline (dotnet-typed-funcall::bool o::dotnet) (with-access::dotnet o (typed-funcall) typed-funcall))
(define-inline (dotnet-typed-funcall-set! o::dotnet v::bool) (with-access::dotnet o (typed-funcall) (set! typed-funcall v)))
(define-inline (dotnet-type-check::bool o::dotnet) (with-access::dotnet o (type-check) type-check))
(define-inline (dotnet-type-check-set! o::dotnet v::bool) (with-access::dotnet o (type-check) (set! type-check v)))
(define-inline (dotnet-bound-check::bool o::dotnet) (with-access::dotnet o (bound-check) bound-check))
(define-inline (dotnet-bound-check-set! o::dotnet v::bool) (with-access::dotnet o (bound-check) (set! bound-check v)))
(define-inline (dotnet-pregisters::pair-nil o::dotnet) (with-access::dotnet o (pregisters) pregisters))
(define-inline (dotnet-pregisters-set! o::dotnet v::pair-nil) (with-access::dotnet o (pregisters) (set! pregisters v)))
(define-inline (dotnet-registers::pair-nil o::dotnet) (with-access::dotnet o (registers) registers))
(define-inline (dotnet-registers-set! o::dotnet v::pair-nil) (with-access::dotnet o (registers) (set! registers v)))
(define-inline (dotnet-require-tailc::bool o::dotnet) (with-access::dotnet o (require-tailc) require-tailc))
(define-inline (dotnet-require-tailc-set! o::dotnet v::bool) (with-access::dotnet o (require-tailc) (set! require-tailc v)))
(define-inline (dotnet-tvector-descr-support::bool o::dotnet) (with-access::dotnet o (tvector-descr-support) tvector-descr-support))
(define-inline (dotnet-tvector-descr-support-set! o::dotnet v::bool) (with-access::dotnet o (tvector-descr-support) (set! tvector-descr-support v)))
(define-inline (dotnet-pragma-support::bool o::dotnet) (with-access::dotnet o (pragma-support) pragma-support))
(define-inline (dotnet-pragma-support-set! o::dotnet v::bool) (with-access::dotnet o (pragma-support) (set! pragma-support v)))
(define-inline (dotnet-debug-support::pair-nil o::dotnet) (with-access::dotnet o (debug-support) debug-support))
(define-inline (dotnet-debug-support-set! o::dotnet v::pair-nil) (with-access::dotnet o (debug-support) (set! debug-support v)))
(define-inline (dotnet-foreign-clause-support::pair-nil o::dotnet) (with-access::dotnet o (foreign-clause-support) foreign-clause-support))
(define-inline (dotnet-foreign-clause-support-set! o::dotnet v::pair-nil) (with-access::dotnet o (foreign-clause-support) (set! foreign-clause-support v)))
(define-inline (dotnet-trace-support::bool o::dotnet) (with-access::dotnet o (trace-support) trace-support))
(define-inline (dotnet-trace-support-set! o::dotnet v::bool) (with-access::dotnet o (trace-support) (set! trace-support v)))
(define-inline (dotnet-typed-eq::bool o::dotnet) (with-access::dotnet o (typed-eq) typed-eq))
(define-inline (dotnet-typed-eq-set! o::dotnet v::bool) (with-access::dotnet o (typed-eq) (set! typed-eq v)))
(define-inline (dotnet-foreign-closure::bool o::dotnet) (with-access::dotnet o (foreign-closure) foreign-closure))
(define-inline (dotnet-foreign-closure-set! o::dotnet v::bool) (with-access::dotnet o (foreign-closure) (set! foreign-closure v)))
(define-inline (dotnet-remove-empty-let::bool o::dotnet) (with-access::dotnet o (remove-empty-let) remove-empty-let))
(define-inline (dotnet-remove-empty-let-set! o::dotnet v::bool) (with-access::dotnet o (remove-empty-let) (set! remove-empty-let v)))
(define-inline (dotnet-effect+::bool o::dotnet) (with-access::dotnet o (effect+) effect+))
(define-inline (dotnet-effect+-set! o::dotnet v::bool) (with-access::dotnet o (effect+) (set! effect+ v)))
(define-inline (dotnet-qualified-types::bool o::dotnet) (with-access::dotnet o (qualified-types) qualified-types))
(define-inline (dotnet-qualified-types-set! o::dotnet v::bool) (with-access::dotnet o (qualified-types) (set! qualified-types v)))
(define-inline (dotnet-callcc::bool o::dotnet) (with-access::dotnet o (callcc) callcc))
(define-inline (dotnet-callcc-set! o::dotnet v::bool) (with-access::dotnet o (callcc) (set! callcc v)))
(define-inline (dotnet-heap-compatible::symbol o::dotnet) (with-access::dotnet o (heap-compatible) heap-compatible))
(define-inline (dotnet-heap-compatible-set! o::dotnet v::symbol) (with-access::dotnet o (heap-compatible) (set! heap-compatible v)))
(define-inline (dotnet-heap-suffix::bstring o::dotnet) (with-access::dotnet o (heap-suffix) heap-suffix))
(define-inline (dotnet-heap-suffix-set! o::dotnet v::bstring) (with-access::dotnet o (heap-suffix) (set! heap-suffix v)))
(define-inline (dotnet-typed::bool o::dotnet) (with-access::dotnet o (typed) typed))
(define-inline (dotnet-typed-set! o::dotnet v::bool) (with-access::dotnet o (typed) (set! typed v)))
(define-inline (dotnet-types::obj o::dotnet) (with-access::dotnet o (types) types))
(define-inline (dotnet-types-set! o::dotnet v::obj) (with-access::dotnet o (types) (set! types v)))
(define-inline (dotnet-functions::obj o::dotnet) (with-access::dotnet o (functions) functions))
(define-inline (dotnet-functions-set! o::dotnet v::obj) (with-access::dotnet o (functions) (set! functions v)))
(define-inline (dotnet-variables::obj o::dotnet) (with-access::dotnet o (variables) variables))
(define-inline (dotnet-variables-set! o::dotnet v::obj) (with-access::dotnet o (variables) (set! variables v)))
(define-inline (dotnet-extern-types::obj o::dotnet) (with-access::dotnet o (extern-types) extern-types))
(define-inline (dotnet-extern-types-set! o::dotnet v::obj) (with-access::dotnet o (extern-types) (set! extern-types v)))
(define-inline (dotnet-extern-functions::obj o::dotnet) (with-access::dotnet o (extern-functions) extern-functions))
(define-inline (dotnet-extern-functions-set! o::dotnet v::obj) (with-access::dotnet o (extern-functions) (set! extern-functions v)))
(define-inline (dotnet-extern-variables::obj o::dotnet) (with-access::dotnet o (extern-variables) extern-variables))
(define-inline (dotnet-extern-variables-set! o::dotnet v::obj) (with-access::dotnet o (extern-variables) (set! extern-variables v)))
(define-inline (dotnet-name::bstring o::dotnet) (with-access::dotnet o (name) name))
(define-inline (dotnet-name-set! o::dotnet v::bstring) (with-access::dotnet o (name) (set! name v)))
(define-inline (dotnet-srfi0::symbol o::dotnet) (with-access::dotnet o (srfi0) srfi0))
(define-inline (dotnet-srfi0-set! o::dotnet v::symbol) (with-access::dotnet o (srfi0) (set! srfi0 v)))
(define-inline (dotnet-language::symbol o::dotnet) (with-access::dotnet o (language) language))
(define-inline (dotnet-language-set! o::dotnet v::symbol) (with-access::dotnet o (language) (set! language v)))
))
