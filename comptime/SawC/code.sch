;; ==========================================================
;; Class accessors
;; Bigloo (4.3a)
;; Inria -- Sophia Antipolis     Sat Mar 26 11:25:43 CET 2016 
;; (bigloo -classgen SawC/code.scm)
;; ==========================================================

;; The directives
(directives

;; SawCIreg
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (static
    (inline make-SawCIreg::SawCIreg type1209::type var1210::obj onexpr?1211::obj name1212::obj key1213::obj hardware1214::obj index1215::obj defs1216::obj uses1217::obj framed1218::obj)
    (inline SawCIreg?::bool ::obj)
    (SawCIreg-nil::SawCIreg)
    (inline SawCIreg-framed::obj ::SawCIreg)
    (inline SawCIreg-framed-set! ::SawCIreg ::obj)
    (inline SawCIreg-uses::obj ::SawCIreg)
    (inline SawCIreg-uses-set! ::SawCIreg ::obj)
    (inline SawCIreg-defs::obj ::SawCIreg)
    (inline SawCIreg-defs-set! ::SawCIreg ::obj)
    (inline SawCIreg-index::obj ::SawCIreg)
    (inline SawCIreg-index-set! ::SawCIreg ::obj)
    (inline SawCIreg-hardware::obj ::SawCIreg)
    (inline SawCIreg-key::obj ::SawCIreg)
    (inline SawCIreg-name::obj ::SawCIreg)
    (inline SawCIreg-onexpr?::obj ::SawCIreg)
    (inline SawCIreg-onexpr?-set! ::SawCIreg ::obj)
    (inline SawCIreg-var::obj ::SawCIreg)
    (inline SawCIreg-var-set! ::SawCIreg ::obj)
    (inline SawCIreg-type::type ::SawCIreg)
    (inline SawCIreg-type-set! ::SawCIreg ::type))))

;; liveblk
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (static
    (inline make-liveblk::liveblk label1198::int preds1199::pair-nil succs1200::pair-nil first1201::pair in1202::obj out1203::obj in_onf1204::obj in_onr1205::obj out_onf1206::obj out_onr1207::obj)
    (inline liveblk?::bool ::obj)
    (liveblk-nil::liveblk)
    (inline liveblk-out_onr::obj ::liveblk)
    (inline liveblk-out_onr-set! ::liveblk ::obj)
    (inline liveblk-out_onf::obj ::liveblk)
    (inline liveblk-out_onf-set! ::liveblk ::obj)
    (inline liveblk-in_onr::obj ::liveblk)
    (inline liveblk-in_onr-set! ::liveblk ::obj)
    (inline liveblk-in_onf::obj ::liveblk)
    (inline liveblk-in_onf-set! ::liveblk ::obj)
    (inline liveblk-out::obj ::liveblk)
    (inline liveblk-out-set! ::liveblk ::obj)
    (inline liveblk-in::obj ::liveblk)
    (inline liveblk-in-set! ::liveblk ::obj)
    (inline liveblk-first::pair ::liveblk)
    (inline liveblk-first-set! ::liveblk ::pair)
    (inline liveblk-succs::pair-nil ::liveblk)
    (inline liveblk-succs-set! ::liveblk ::pair-nil)
    (inline liveblk-preds::pair-nil ::liveblk)
    (inline liveblk-preds-set! ::liveblk ::pair-nil)
    (inline liveblk-label::int ::liveblk)
    (inline liveblk-label-set! ::liveblk ::int))))

;; liveins
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (static
    (inline make-liveins::liveins loc1191::obj %spill1192::pair-nil dest1193::obj fun1194::rtl_fun args1195::pair-nil after1196::obj)
    (inline liveins?::bool ::obj)
    (liveins-nil::liveins)
    (inline liveins-after::obj ::liveins)
    (inline liveins-after-set! ::liveins ::obj)
    (inline liveins-args::pair-nil ::liveins)
    (inline liveins-args-set! ::liveins ::pair-nil)
    (inline liveins-fun::rtl_fun ::liveins)
    (inline liveins-fun-set! ::liveins ::rtl_fun)
    (inline liveins-dest::obj ::liveins)
    (inline liveins-dest-set! ::liveins ::obj)
    (inline liveins-%spill::pair-nil ::liveins)
    (inline liveins-%spill-set! ::liveins ::pair-nil)
    (inline liveins-loc::obj ::liveins)
    (inline liveins-loc-set! ::liveins ::obj)))))

;; The definitions
(cond-expand (bigloo-class-sans
;; SawCIreg
(define-inline (make-SawCIreg::SawCIreg type1209::type var1210::obj onexpr?1211::obj name1212::obj key1213::obj hardware1214::obj index1215::obj defs1216::obj uses1217::obj framed1218::obj) (instantiate::SawCIreg (type type1209) (var var1210) (onexpr? onexpr?1211) (name name1212) (key key1213) (hardware hardware1214) (index index1215) (defs defs1216) (uses uses1217) (framed framed1218)))
(define-inline (SawCIreg?::bool obj::obj) ((@ isa? __object) obj (@ SawCIreg saw_c_code)))
(define (SawCIreg-nil::SawCIreg) (class-nil (@ SawCIreg saw_c_code)))
(define-inline (SawCIreg-framed::obj o::SawCIreg) (-> |#!bigloo_wallow| o framed))
(define-inline (SawCIreg-framed-set! o::SawCIreg v::obj) (set! (-> |#!bigloo_wallow| o framed) v))
(define-inline (SawCIreg-uses::obj o::SawCIreg) (-> |#!bigloo_wallow| o uses))
(define-inline (SawCIreg-uses-set! o::SawCIreg v::obj) (set! (-> |#!bigloo_wallow| o uses) v))
(define-inline (SawCIreg-defs::obj o::SawCIreg) (-> |#!bigloo_wallow| o defs))
(define-inline (SawCIreg-defs-set! o::SawCIreg v::obj) (set! (-> |#!bigloo_wallow| o defs) v))
(define-inline (SawCIreg-index::obj o::SawCIreg) (-> |#!bigloo_wallow| o index))
(define-inline (SawCIreg-index-set! o::SawCIreg v::obj) (set! (-> |#!bigloo_wallow| o index) v))
(define-inline (SawCIreg-hardware::obj o::SawCIreg) (-> |#!bigloo_wallow| o hardware))
(define-inline (SawCIreg-hardware-set! o::SawCIreg v::obj) (set! (-> |#!bigloo_wallow| o hardware) v))
(define-inline (SawCIreg-key::obj o::SawCIreg) (-> |#!bigloo_wallow| o key))
(define-inline (SawCIreg-key-set! o::SawCIreg v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (SawCIreg-name::obj o::SawCIreg) (-> |#!bigloo_wallow| o name))
(define-inline (SawCIreg-name-set! o::SawCIreg v::obj) (set! (-> |#!bigloo_wallow| o name) v))
(define-inline (SawCIreg-onexpr?::obj o::SawCIreg) (-> |#!bigloo_wallow| o onexpr?))
(define-inline (SawCIreg-onexpr?-set! o::SawCIreg v::obj) (set! (-> |#!bigloo_wallow| o onexpr?) v))
(define-inline (SawCIreg-var::obj o::SawCIreg) (-> |#!bigloo_wallow| o var))
(define-inline (SawCIreg-var-set! o::SawCIreg v::obj) (set! (-> |#!bigloo_wallow| o var) v))
(define-inline (SawCIreg-type::type o::SawCIreg) (-> |#!bigloo_wallow| o type))
(define-inline (SawCIreg-type-set! o::SawCIreg v::type) (set! (-> |#!bigloo_wallow| o type) v))

;; liveblk
(define-inline (make-liveblk::liveblk label1198::int preds1199::pair-nil succs1200::pair-nil first1201::pair in1202::obj out1203::obj in_onf1204::obj in_onr1205::obj out_onf1206::obj out_onr1207::obj) (instantiate::liveblk (label label1198) (preds preds1199) (succs succs1200) (first first1201) (in in1202) (out out1203) (in_onf in_onf1204) (in_onr in_onr1205) (out_onf out_onf1206) (out_onr out_onr1207)))
(define-inline (liveblk?::bool obj::obj) ((@ isa? __object) obj (@ liveblk saw_c_code)))
(define (liveblk-nil::liveblk) (class-nil (@ liveblk saw_c_code)))
(define-inline (liveblk-out_onr::obj o::liveblk) (-> |#!bigloo_wallow| o out_onr))
(define-inline (liveblk-out_onr-set! o::liveblk v::obj) (set! (-> |#!bigloo_wallow| o out_onr) v))
(define-inline (liveblk-out_onf::obj o::liveblk) (-> |#!bigloo_wallow| o out_onf))
(define-inline (liveblk-out_onf-set! o::liveblk v::obj) (set! (-> |#!bigloo_wallow| o out_onf) v))
(define-inline (liveblk-in_onr::obj o::liveblk) (-> |#!bigloo_wallow| o in_onr))
(define-inline (liveblk-in_onr-set! o::liveblk v::obj) (set! (-> |#!bigloo_wallow| o in_onr) v))
(define-inline (liveblk-in_onf::obj o::liveblk) (-> |#!bigloo_wallow| o in_onf))
(define-inline (liveblk-in_onf-set! o::liveblk v::obj) (set! (-> |#!bigloo_wallow| o in_onf) v))
(define-inline (liveblk-out::obj o::liveblk) (-> |#!bigloo_wallow| o out))
(define-inline (liveblk-out-set! o::liveblk v::obj) (set! (-> |#!bigloo_wallow| o out) v))
(define-inline (liveblk-in::obj o::liveblk) (-> |#!bigloo_wallow| o in))
(define-inline (liveblk-in-set! o::liveblk v::obj) (set! (-> |#!bigloo_wallow| o in) v))
(define-inline (liveblk-first::pair o::liveblk) (-> |#!bigloo_wallow| o first))
(define-inline (liveblk-first-set! o::liveblk v::pair) (set! (-> |#!bigloo_wallow| o first) v))
(define-inline (liveblk-succs::pair-nil o::liveblk) (-> |#!bigloo_wallow| o succs))
(define-inline (liveblk-succs-set! o::liveblk v::pair-nil) (set! (-> |#!bigloo_wallow| o succs) v))
(define-inline (liveblk-preds::pair-nil o::liveblk) (-> |#!bigloo_wallow| o preds))
(define-inline (liveblk-preds-set! o::liveblk v::pair-nil) (set! (-> |#!bigloo_wallow| o preds) v))
(define-inline (liveblk-label::int o::liveblk) (-> |#!bigloo_wallow| o label))
(define-inline (liveblk-label-set! o::liveblk v::int) (set! (-> |#!bigloo_wallow| o label) v))

;; liveins
(define-inline (make-liveins::liveins loc1191::obj %spill1192::pair-nil dest1193::obj fun1194::rtl_fun args1195::pair-nil after1196::obj) (instantiate::liveins (loc loc1191) (%spill %spill1192) (dest dest1193) (fun fun1194) (args args1195) (after after1196)))
(define-inline (liveins?::bool obj::obj) ((@ isa? __object) obj (@ liveins saw_c_code)))
(define (liveins-nil::liveins) (class-nil (@ liveins saw_c_code)))
(define-inline (liveins-after::obj o::liveins) (-> |#!bigloo_wallow| o after))
(define-inline (liveins-after-set! o::liveins v::obj) (set! (-> |#!bigloo_wallow| o after) v))
(define-inline (liveins-args::pair-nil o::liveins) (-> |#!bigloo_wallow| o args))
(define-inline (liveins-args-set! o::liveins v::pair-nil) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (liveins-fun::rtl_fun o::liveins) (-> |#!bigloo_wallow| o fun))
(define-inline (liveins-fun-set! o::liveins v::rtl_fun) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (liveins-dest::obj o::liveins) (-> |#!bigloo_wallow| o dest))
(define-inline (liveins-dest-set! o::liveins v::obj) (set! (-> |#!bigloo_wallow| o dest) v))
(define-inline (liveins-%spill::pair-nil o::liveins) (-> |#!bigloo_wallow| o %spill))
(define-inline (liveins-%spill-set! o::liveins v::pair-nil) (set! (-> |#!bigloo_wallow| o %spill) v))
(define-inline (liveins-loc::obj o::liveins) (-> |#!bigloo_wallow| o loc))
(define-inline (liveins-loc-set! o::liveins v::obj) (set! (-> |#!bigloo_wallow| o loc) v))
))
