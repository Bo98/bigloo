NOTE: in this document we use the following definitions for cross compiling [1]:

 * host: platform where everything will be compiled. usually
   i386/i686/amd64/x86_64+Linux or Mac.
 * target: platform which will run the resulting binary. arm+Android in this
   case.

1. Getting stuff
================

Compiling Bigloo for Android requires several things:

 (Install all this as a subdirectory of the same directory. This will make
 configuration simpler).

  * Android SDK [2].

  * Get Android source code (Elcair or Froyo), for which you'll need git. 
    See instructions below (Section 1.1).

  * Bigloo comes with its own version of droid-gcc, a wrapper that is in
    charge of invoking correctly gcc. If a more recent version is
    needed, it may be downloaded from the droid-wrapper web site [4] or 
    extracted from the git repository with the command:
    
     $ git clone git://github.com/tmurakam/droid-wrapper.git

    IMPORTANT: Once downloaded, apply droid-wrapper.diff shipped in this 
    directory and install.

Also you will require:

 * An already compiled and running bigloo version for the host platform.


1.1 Getting Android SDK source code
-----------------------------------

Download the Android SDK source code. Follow the instructions. Create
a machine and start it. In the following, we assume that the shell variable
DROIDROOT is bound to the path of the SDK.

  $ export DROIDSDKROOT=the-path-of-SDK


1.2 Getting Android source code
-------------------------------

As of Sep 2010, one may either chose the Eclair or Froyo distribution. 
The instructions to get and build Android are based on [3].

First, you might need to introduce yourself to git:

  $ git config --global user.email "you@example.com"
  $ git config --global user.name "Your Name"

Download repo, a wrapper around git:

  $ curl http://android.git.kernel.org/repo > ~/bin/repo
  $ chmod a+x ~/bin/repo

Get definitions and source code:

  $ mkdir eclair-git
  $ cd eclair-git
  $ repo init -u git://android.git.kernel.org/platform/manifest.git -b eclair
  $ repo sync

(Froyos can be obtained similarly by replacing "eclair" with "froyo".)

Compile

  $ cd eclair-git && make 

Let the shell variable DROIDROOT be the absolute path of the directory
containing the Android source code distribution

  $ export DROIDROOT=your-path/eclair-git


2. Configure and compiling Bigloo
=================================

First, you need to install a plain Bigloo on your host. For that
proceed as follow:

  $ BGLROOT=/usr/local
  $ ./configure --prefix=$BGLROOT && make && make install  

Then, untar a fresh Bigloo and cross compile it:

  $ ./configure \
        --build-bindir=$BGLROOT/bin
        --android-root=$DROIDROOT \
        --android-sdk-root=$DROIDSDKROOT \
        --os-android
  $ make



















Configuring:
===========

Copy 'arch/android/config-local.sh.sample' into 'arch/android/config-local.sh'
and edit it. Point ANDROIDROOT to the directory where you downloaded and
decompressed all the Android tools, and BS_BIGLOO to the dir where the host
bigloo resides.

!! MS, Sep 20: what are the Android tools, the tools that come with the SDK?
!! MS, Sep 20: This is unclear what you mean by BS_BIGLOO to the dir where
   the host bigloo resides. Do you mean the source code or do you mean the
   Bigloo installation directory?


Compiling:
=========

You will need an Android 2.0 (eclair) or newer device running. This can be a
real phone with USB debugging turned on (you can turn it on when you plug in
the USB cable; we at least know Motorola Droid/Milestone and HTC Desire can do
it) or any device emulated in the SDK's emulator. You can test with SDK's
'tools/adb logcat' wether you can connect to the device. If you can't,
'killall adb'[5], fix whatever is wrong and try again.

Then you can simply run:

   ./arch/android/build-android.sh configure

!! Add here that the VM must be spawned before
!! MS, Sep 20: but if this fails, there is no error message to help!

If everything's ok, then you can compile:

   ./arch/android/build-android.sh build

If everything's ok, then you can install[6]:

   make install


Notes:
=====

The current version assumes you're using Android SDK r07, which decompresses in
a directory called 'android-sdk-linux_x86'. If you're using another version and
the path changes (in r04 it was 'android-sdk-linux' and in r06 it was
'android-sdk-linux_86') , edit 'arch/android/config.sh' to reflect the change,
and please let us know.

--
[1] http://en.wikipedia.org/wiki/Cross_compile#GCC_and_cross_compilation

[2] http://developer.android.com/sdk/index.html

[3] http://source.android.com/source/download.html

[4] http://github.com/tmurakam/droid-wrapper

[5] 'adb' runs as a daemon and somehow is not affected by e.g. permission
    changes.

[6] but currently it doesn't make much sense.
